name: Publish Release

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allows manual trigger

permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install dependencies
        run: npm ci

      - name: Get current version and increment if needed
        id: version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Function to check if version exists on npm
          check_version_exists() {
            npm view swap-pay-sdk@$1 version 2>/dev/null
          }
          
          # Start with current version
          NEW_VERSION=$CURRENT_VERSION
          
          # Keep incrementing until we find a version that doesn't exist
          while check_version_exists $NEW_VERSION; do
            echo "Version $NEW_VERSION already exists on npm, incrementing..."
            # Set the version temporarily to increment it
            npm version $NEW_VERSION --no-git-tag-version --allow-same-version
            NEW_VERSION=$(npm version patch --no-git-tag-version)
            NEW_VERSION=${NEW_VERSION#v}  # Remove 'v' prefix
          done
          
          echo "Found available version: $NEW_VERSION"
          echo "new=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "should_publish=true" >> $GITHUB_OUTPUT
          
          # Set the final version in package.json
          npm version $NEW_VERSION --no-git-tag-version --allow-same-version

      - name: Build package
        if: steps.version.outputs.should_publish == 'true'
        run: npm run build

      - name: Publish to npm
        if: steps.version.outputs.should_publish == 'true'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.version.outputs.should_publish == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.new }}
          release_name: Release v${{ steps.version.outputs.new }}
          body: |
            ## Auto-generated Release v${{ steps.version.outputs.new }}
            
            **Previous version:** ${{ steps.version.outputs.current }}
            **New version:** ${{ steps.version.outputs.new }}
            
            ### Changes
            - Auto-published from main branch
            - Version automatically incremented
            
            Install with:
            ```
            npm install swap-pay-sdk@${{ steps.version.outputs.new }}
            ```
          draft: false
          prerelease: false

      - name: Commit version changes
        if: steps.version.outputs.should_publish == 'true'
        run: |
          git add package.json
          git commit -m "chore: bump version to v${{ steps.version.outputs.new }}" || echo "No changes to commit"
          git push origin main
